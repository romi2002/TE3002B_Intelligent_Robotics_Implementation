;; Auto-generated. Do not edit!


(when (boundp 'puzzlebot_controller::MoveGoal)
  (if (not (find-package "PUZZLEBOT_CONTROLLER"))
    (make-package "PUZZLEBOT_CONTROLLER"))
  (shadow 'MoveGoal (find-package "PUZZLEBOT_CONTROLLER")))
(unless (find-package "PUZZLEBOT_CONTROLLER::MOVEGOAL")
  (make-package "PUZZLEBOT_CONTROLLER::MOVEGOAL"))

(in-package "ROS")
;;//! \htmlinclude MoveGoal.msg.html
(if (not (find-package "GEOMETRY_MSGS"))
  (ros::roseus-add-msgs "geometry_msgs"))


(defclass puzzlebot_controller::MoveGoal
  :super ros::object
  :slots (_goal ))

(defmethod puzzlebot_controller::MoveGoal
  (:init
   (&key
    ((:goal __goal) (instance geometry_msgs::Point :init))
    )
   (send-super :init)
   (setq _goal __goal)
   self)
  (:goal
   (&rest __goal)
   (if (keywordp (car __goal))
       (send* _goal __goal)
     (progn
       (if __goal (setq _goal (car __goal)))
       _goal)))
  (:serialization-length
   ()
   (+
    ;; geometry_msgs/Point _goal
    (send _goal :serialization-length)
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; geometry_msgs/Point _goal
       (send _goal :serialize s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; geometry_msgs/Point _goal
     (send _goal :deserialize buf ptr-) (incf ptr- (send _goal :serialization-length))
   ;;
   self)
  )

(setf (get puzzlebot_controller::MoveGoal :md5sum-) "8ad3bd0e46ff6777ce7cd2fdd945cb9e")
(setf (get puzzlebot_controller::MoveGoal :datatype-) "puzzlebot_controller/MoveGoal")
(setf (get puzzlebot_controller::MoveGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Goal to move to, only x, z are used
# Relative to starting position
# If rot / translations are sent in the same goal,
# translation will be applied first
geometry_msgs/Point goal

================================================================================
MSG: geometry_msgs/Point
# This contains the position of a point in free space
float64 x
float64 y
float64 z

")



(provide :puzzlebot_controller/MoveGoal "8ad3bd0e46ff6777ce7cd2fdd945cb9e")


