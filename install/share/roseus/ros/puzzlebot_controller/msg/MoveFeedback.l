;; Auto-generated. Do not edit!


(when (boundp 'puzzlebot_controller::MoveFeedback)
  (if (not (find-package "PUZZLEBOT_CONTROLLER"))
    (make-package "PUZZLEBOT_CONTROLLER"))
  (shadow 'MoveFeedback (find-package "PUZZLEBOT_CONTROLLER")))
(unless (find-package "PUZZLEBOT_CONTROLLER::MOVEFEEDBACK")
  (make-package "PUZZLEBOT_CONTROLLER::MOVEFEEDBACK"))

(in-package "ROS")
;;//! \htmlinclude MoveFeedback.msg.html


(defclass puzzlebot_controller::MoveFeedback
  :super ros::object
  :slots (_distance_to_target _angle_to_target ))

(defmethod puzzlebot_controller::MoveFeedback
  (:init
   (&key
    ((:distance_to_target __distance_to_target) 0.0)
    ((:angle_to_target __angle_to_target) 0.0)
    )
   (send-super :init)
   (setq _distance_to_target (float __distance_to_target))
   (setq _angle_to_target (float __angle_to_target))
   self)
  (:distance_to_target
   (&optional __distance_to_target)
   (if __distance_to_target (setq _distance_to_target __distance_to_target)) _distance_to_target)
  (:angle_to_target
   (&optional __angle_to_target)
   (if __angle_to_target (setq _angle_to_target __angle_to_target)) _angle_to_target)
  (:serialization-length
   ()
   (+
    ;; float64 _distance_to_target
    8
    ;; float64 _angle_to_target
    8
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; float64 _distance_to_target
       (sys::poke _distance_to_target (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
     ;; float64 _angle_to_target
       (sys::poke _angle_to_target (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; float64 _distance_to_target
     (setq _distance_to_target (sys::peek buf ptr- :double)) (incf ptr- 8)
   ;; float64 _angle_to_target
     (setq _angle_to_target (sys::peek buf ptr- :double)) (incf ptr- 8)
   ;;
   self)
  )

(setf (get puzzlebot_controller::MoveFeedback :md5sum-) "b73dc5583aad0d7c99117ecba4b8f6df")
(setf (get puzzlebot_controller::MoveFeedback :datatype-) "puzzlebot_controller/MoveFeedback")
(setf (get puzzlebot_controller::MoveFeedback :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Feedback
float64 distance_to_target
float64 angle_to_target

")



(provide :puzzlebot_controller/MoveFeedback "b73dc5583aad0d7c99117ecba4b8f6df")


