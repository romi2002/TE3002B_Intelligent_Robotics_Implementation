[01m[K/home/puzzlebot/ws/src/puzzlebot_controller/src/state_machine_node.cpp:[m[K In member function â€˜[01m[Kvoid StateMachine::move_and_turn(double, double)[m[Kâ€™:
[01m[K/home/puzzlebot/ws/src/puzzlebot_controller/src/state_machine_node.cpp:135:24:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kactionlib::SimpleActionClient<puzzlebot_controller::MoveAction_<std::allocator<void> > >::sendGoal(puzzlebot_controller::MoveActionGoal&)[m[Kâ€™
     ac_.sendGoal(action[01;31m[K)[m[K;
                        [01;31m[K^[m[K
In file included from [01m[K/home/puzzlebot/ws/src/puzzlebot_controller/src/state_machine_node.cpp:10:0[m[K:
[01m[K/opt/ros/melodic/include/actionlib/client/simple_action_client.h:317:6:[m[K [01;36m[Knote: [m[Kcandidate: void actionlib::SimpleActionClient<ActionSpec>::sendGoal(const Goal&, actionlib::SimpleActionClient<ActionSpec>::SimpleDoneCallback, actionlib::SimpleActionClient<ActionSpec>::SimpleActiveCallback, actionlib::SimpleActionClient<ActionSpec>::SimpleFeedbackCallback) [with ActionSpec = puzzlebot_controller::MoveAction_<std::allocator<void> >; actionlib::SimpleActionClient<ActionSpec>::Goal = puzzlebot_controller::MoveGoal_<std::allocator<void> >; actionlib::SimpleActionClient<ActionSpec>::SimpleDoneCallback = boost::function<void(const actionlib::SimpleClientGoalState&, const boost::shared_ptr<const puzzlebot_controller::MoveResult_<std::allocator<void> > >&)>; typename ActionSpec::_action_result_type::_result_type = puzzlebot_controller::MoveResult_<std::allocator<void> >; actionlib::SimpleActionClient<ActionSpec>::SimpleActiveCallback = boost::function<void()>; actionlib::SimpleActionClient<ActionSpec>::SimpleFeedbackCallback = boost::function<void(const boost::shared_ptr<const puzzlebot_controller::MoveFeedback_<std::allocator<void> > >&)>; typename ActionSpec::_action_feedback_type::_feedback_type = puzzlebot_controller::MoveFeedback_<std::allocator<void> >]
 void [01;36m[KSimpleActionClient<ActionSpec>[m[K::sendGoal(const Goal & goal,
      [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/opt/ros/melodic/include/actionlib/client/simple_action_client.h:317:6:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kpuzzlebot_controller::MoveActionGoal {aka puzzlebot_controller::MoveActionGoal_<std::allocator<void> >}[m[Kâ€™ to â€˜[01m[Kconst Goal& {aka const puzzlebot_controller::MoveGoal_<std::allocator<void> >&}[m[Kâ€™
[01m[K/home/puzzlebot/ws/src/puzzlebot_controller/src/state_machine_node.cpp:138:5:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K;[m[Kâ€™ before â€˜[01m[Kaction[m[Kâ€™
     [01;31m[Kaction[m[K.goal.x = 0.0;
     [01;31m[K^~~~~~[m[K
[01m[K/home/puzzlebot/ws/src/puzzlebot_controller/src/state_machine_node.cpp:138:17:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kpuzzlebot_controller::MoveActionGoal_<std::allocator<void> >::_goal_type {aka struct puzzlebot_controller::MoveGoal_<std::allocator<void> >}[m[Kâ€™ has no member named â€˜[01m[Kx[m[Kâ€™
     action.goal.[01;31m[Kx[m[K = 0.0;
                 [01;31m[K^[m[K
[01m[K/home/puzzlebot/ws/src/puzzlebot_controller/src/state_machine_node.cpp:139:17:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kpuzzlebot_controller::MoveActionGoal_<std::allocator<void> >::_goal_type {aka struct puzzlebot_controller::MoveGoal_<std::allocator<void> >}[m[Kâ€™ has no member named â€˜[01m[Kz[m[Kâ€™
     action.goal.[01;31m[Kz[m[K = angle;
                 [01;31m[K^[m[K
[01m[K/home/puzzlebot/ws/src/puzzlebot_controller/src/state_machine_node.cpp:140:24:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kactionlib::SimpleActionClient<puzzlebot_controller::MoveAction_<std::allocator<void> > >::sendGoal(puzzlebot_controller::MoveActionGoal&)[m[Kâ€™
     ac_.sendGoal(action[01;31m[K)[m[K;
                        [01;31m[K^[m[K
In file included from [01m[K/home/puzzlebot/ws/src/puzzlebot_controller/src/state_machine_node.cpp:10:0[m[K:
[01m[K/opt/ros/melodic/include/actionlib/client/simple_action_client.h:317:6:[m[K [01;36m[Knote: [m[Kcandidate: void actionlib::SimpleActionClient<ActionSpec>::sendGoal(const Goal&, actionlib::SimpleActionClient<ActionSpec>::SimpleDoneCallback, actionlib::SimpleActionClient<ActionSpec>::SimpleActiveCallback, actionlib::SimpleActionClient<ActionSpec>::SimpleFeedbackCallback) [with ActionSpec = puzzlebot_controller::MoveAction_<std::allocator<void> >; actionlib::SimpleActionClient<ActionSpec>::Goal = puzzlebot_controller::MoveGoal_<std::allocator<void> >; actionlib::SimpleActionClient<ActionSpec>::SimpleDoneCallback = boost::function<void(const actionlib::SimpleClientGoalState&, const boost::shared_ptr<const puzzlebot_controller::MoveResult_<std::allocator<void> > >&)>; typename ActionSpec::_action_result_type::_result_type = puzzlebot_controller::MoveResult_<std::allocator<void> >; actionlib::SimpleActionClient<ActionSpec>::SimpleActiveCallback = boost::function<void()>; actionlib::SimpleActionClient<ActionSpec>::SimpleFeedbackCallback = boost::function<void(const boost::shared_ptr<const puzzlebot_controller::MoveFeedback_<std::allocator<void> > >&)>; typename ActionSpec::_action_feedback_type::_feedback_type = puzzlebot_controller::MoveFeedback_<std::allocator<void> >]
 void [01;36m[KSimpleActionClient<ActionSpec>[m[K::sendGoal(const Goal & goal,
      [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/opt/ros/melodic/include/actionlib/client/simple_action_client.h:317:6:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kpuzzlebot_controller::MoveActionGoal {aka puzzlebot_controller::MoveActionGoal_<std::allocator<void> >}[m[Kâ€™ to â€˜[01m[Kconst Goal& {aka const puzzlebot_controller::MoveGoal_<std::allocator<void> >&}[m[Kâ€™
[01m[K/home/puzzlebot/ws/src/puzzlebot_controller/src/state_machine_node.cpp:143:5:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KMoveActionGoal[m[Kâ€™ was not declared in this scope
     [01;31m[KMoveActionGoal[m[K action;
     [01;31m[K^~~~~~~~~~~~~~[m[K
[01m[K/home/puzzlebot/ws/src/puzzlebot_controller/src/state_machine_node.cpp:143:5:[m[K [01;36m[Knote: [m[Ksuggested alternative:
In file included from [01m[K/home/puzzlebot/ws/devel/.private/puzzlebot_controller/include/puzzlebot_controller/MoveAction.h:18:0[m[K,
                 from [01m[K/home/puzzlebot/ws/src/puzzlebot_controller/src/state_machine_node.cpp:11[m[K:
[01m[K/home/puzzlebot/ws/devel/.private/puzzlebot_controller/include/puzzlebot_controller/MoveActionGoal.h:61:72:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kpuzzlebot_controller::MoveActionGoal[m[Kâ€™
 typedef ::puzzlebot_controller::MoveActionGoal_<std::allocator<void> > [01;36m[KMoveActionGoal[m[K;
                                                                        [01;36m[K^~~~~~~~~~~~~~[m[K
[01m[K/home/puzzlebot/ws/src/puzzlebot_controller/src/state_machine_node.cpp:144:17:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kpuzzlebot_controller::MoveActionGoal_<std::allocator<void> >::_goal_type {aka struct puzzlebot_controller::MoveGoal_<std::allocator<void> >}[m[Kâ€™ has no member named â€˜[01m[Kx[m[Kâ€™
     action.goal.[01;31m[Kx[m[K = dist;
                 [01;31m[K^[m[K
[01m[K/home/puzzlebot/ws/src/puzzlebot_controller/src/state_machine_node.cpp:145:17:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kpuzzlebot_controller::MoveActionGoal_<std::allocator<void> >::_goal_type {aka struct puzzlebot_controller::MoveGoal_<std::allocator<void> >}[m[Kâ€™ has no member named â€˜[01m[Kz[m[Kâ€™
     action.goal.[01;31m[Kz[m[K = 0;
                 [01;31m[K^[m[K
[01m[K/home/puzzlebot/ws/src/puzzlebot_controller/src/state_machine_node.cpp:146:24:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kactionlib::SimpleActionClient<puzzlebot_controller::MoveAction_<std::allocator<void> > >::sendGoal(puzzlebot_controller::MoveActionGoal&)[m[Kâ€™
     ac_.sendGoal(action[01;31m[K)[m[K;
                        [01;31m[K^[m[K
In file included from [01m[K/home/puzzlebot/ws/src/puzzlebot_controller/src/state_machine_node.cpp:10:0[m[K:
[01m[K/opt/ros/melodic/include/actionlib/client/simple_action_client.h:317:6:[m[K [01;36m[Knote: [m[Kcandidate: void actionlib::SimpleActionClient<ActionSpec>::sendGoal(const Goal&, actionlib::SimpleActionClient<ActionSpec>::SimpleDoneCallback, actionlib::SimpleActionClient<ActionSpec>::SimpleActiveCallback, actionlib::SimpleActionClient<ActionSpec>::SimpleFeedbackCallback) [with ActionSpec = puzzlebot_controller::MoveAction_<std::allocator<void> >; actionlib::SimpleActionClient<ActionSpec>::Goal = puzzlebot_controller::MoveGoal_<std::allocator<void> >; actionlib::SimpleActionClient<ActionSpec>::SimpleDoneCallback = boost::function<void(const actionlib::SimpleClientGoalState&, const boost::shared_ptr<const puzzlebot_controller::MoveResult_<std::allocator<void> > >&)>; typename ActionSpec::_action_result_type::_result_type = puzzlebot_controller::MoveResult_<std::allocator<void> >; actionlib::SimpleActionClient<ActionSpec>::SimpleActiveCallback = boost::function<void()>; actionlib::SimpleActionClient<ActionSpec>::SimpleFeedbackCallback = boost::function<void(const boost::shared_ptr<const puzzlebot_controller::MoveFeedback_<std::allocator<void> > >&)>; typename ActionSpec::_action_feedback_type::_feedback_type = puzzlebot_controller::MoveFeedback_<std::allocator<void> >]
 void [01;36m[KSimpleActionClient<ActionSpec>[m[K::sendGoal(const Goal & goal,
      [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/opt/ros/melodic/include/actionlib/client/simple_action_client.h:317:6:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kpuzzlebot_controller::MoveActionGoal {aka puzzlebot_controller::MoveActionGoal_<std::allocator<void> >}[m[Kâ€™ to â€˜[01m[Kconst Goal& {aka const puzzlebot_controller::MoveGoal_<std::allocator<void> >&}[m[Kâ€™
[01m[K/home/puzzlebot/ws/src/puzzlebot_controller/src/state_machine_node.cpp:[m[K In member function â€˜[01m[Kvoid StateMachine::forward(double)[m[Kâ€™:
[01m[K/home/puzzlebot/ws/src/puzzlebot_controller/src/state_machine_node.cpp:154:17:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kpuzzlebot_controller::MoveActionGoal_<std::allocator<void> >::_goal_type {aka struct puzzlebot_controller::MoveGoal_<std::allocator<void> >}[m[Kâ€™ has no member named â€˜[01m[Kx[m[Kâ€™
     action.goal.[01;31m[Kx[m[K = dist;
                 [01;31m[K^[m[K
[01m[K/home/puzzlebot/ws/src/puzzlebot_controller/src/state_machine_node.cpp:155:17:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kpuzzlebot_controller::MoveActionGoal_<std::allocator<void> >::_goal_type {aka struct puzzlebot_controller::MoveGoal_<std::allocator<void> >}[m[Kâ€™ has no member named â€˜[01m[Kz[m[Kâ€™
     action.goal.[01;31m[Kz[m[K = 0;
                 [01;31m[K^[m[K
[01m[K/home/puzzlebot/ws/src/puzzlebot_controller/src/state_machine_node.cpp:156:24:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kactionlib::SimpleActionClient<puzzlebot_controller::MoveAction_<std::allocator<void> > >::sendGoal(puzzlebot_controller::MoveActionGoal&)[m[Kâ€™
     ac_.sendGoal(action[01;31m[K)[m[K;
                        [01;31m[K^[m[K
In file included from [01m[K/home/puzzlebot/ws/src/puzzlebot_controller/src/state_machine_node.cpp:10:0[m[K:
[01m[K/opt/ros/melodic/include/actionlib/client/simple_action_client.h:317:6:[m[K [01;36m[Knote: [m[Kcandidate: void actionlib::SimpleActionClient<ActionSpec>::sendGoal(const Goal&, actionlib::SimpleActionClient<ActionSpec>::SimpleDoneCallback, actionlib::SimpleActionClient<ActionSpec>::SimpleActiveCallback, actionlib::SimpleActionClient<ActionSpec>::SimpleFeedbackCallback) [with ActionSpec = puzzlebot_controller::MoveAction_<std::allocator<void> >; actionlib::SimpleActionClient<ActionSpec>::Goal = puzzlebot_controller::MoveGoal_<std::allocator<void> >; actionlib::SimpleActionClient<ActionSpec>::SimpleDoneCallback = boost::function<void(const actionlib::SimpleClientGoalState&, const boost::shared_ptr<const puzzlebot_controller::MoveResult_<std::allocator<void> > >&)>; typename ActionSpec::_action_result_type::_result_type = puzzlebot_controller::MoveResult_<std::allocator<void> >; actionlib::SimpleActionClient<ActionSpec>::SimpleActiveCallback = boost::function<void()>; actionlib::SimpleActionClient<ActionSpec>::SimpleFeedbackCallback = boost::function<void(const boost::shared_ptr<const puzzlebot_controller::MoveFeedback_<std::allocator<void> > >&)>; typename ActionSpec::_action_feedback_type::_feedback_type = puzzlebot_controller::MoveFeedback_<std::allocator<void> >]
 void [01;36m[KSimpleActionClient<ActionSpec>[m[K::sendGoal(const Goal & goal,
      [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/opt/ros/melodic/include/actionlib/client/simple_action_client.h:317:6:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kpuzzlebot_controller::MoveActionGoal {aka puzzlebot_controller::MoveActionGoal_<std::allocator<void> >}[m[Kâ€™ to â€˜[01m[Kconst Goal& {aka const puzzlebot_controller::MoveGoal_<std::allocator<void> >&}[m[Kâ€™
[01m[K/home/puzzlebot/ws/src/puzzlebot_controller/src/state_machine_node.cpp:[m[K At global scope:
[01m[K/home/puzzlebot/ws/src/puzzlebot_controller/src/state_machine_node.cpp:182:2:[m[K [01;31m[Kerror: [m[Kmultiple types in one declaration
 }[01;31m[K;[m[K
  [01;31m[K^[m[K
make[2]: *** [CMakeFiles/puzzlebot_controller_state_machine_node.dir/src/state_machine_node.cpp.o] Error 1
make[1]: *** [CMakeFiles/puzzlebot_controller_state_machine_node.dir/all] Error 2
make: *** [all] Error 2
